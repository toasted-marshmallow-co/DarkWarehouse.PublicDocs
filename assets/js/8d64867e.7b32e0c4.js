"use strict";(self.webpackChunkdark_warehouse_public_docs=self.webpackChunkdark_warehouse_public_docs||[]).push([[3821],{48241:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>u});var s=o(85893),n=o(11151);const i={sidebar_position:6},a="Policies",r={id:"Full Automation/Policies",title:"Policies",description:"The Omni-Mole Automated Storage and Retrieval System is a type of automated pallet storage system that leverages deep lane storage with battery-operated shuttle robots. The intention of the system is to store and retrieve palletized goods. The Omni-Mole system is different to a conventional deep-lane storage system in that it allows the battery-operated shuttles to travel laterally between deep",source:"@site/docs/09-Full Automation/06-Policies.md",sourceDirName:"09-Full Automation",slug:"/Full Automation/Policies",permalink:"/docs/Full Automation/Policies",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Grouping Requests",permalink:"/docs/Full Automation/Grouping Requests"},next:{title:"WMS Decisions",permalink:"/docs/Full Automation/WMS Decisions"}},l={},u=[];function c(e){const t={h1:"h1",p:"p",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"policies",children:"Policies"}),"\n",(0,s.jsx)(t.p,{children:"The Omni-Mole Automated Storage and Retrieval System is a type of automated pallet storage system that leverages deep lane storage with battery-operated shuttle robots. The intention of the system is to store and retrieve palletized goods. The Omni-Mole system is different to a conventional deep-lane storage system in that it allows the battery-operated shuttles to travel laterally between deep"})]})}function d(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},11151:(e,t,o)=>{o.d(t,{Z:()=>r,a:()=>a});var s=o(67294);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);